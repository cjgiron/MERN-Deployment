{"version":3,"sources":["views/AllPets.js","views/NewPet.js","views/Pet.js","views/EditPet.js","App.js","reportWebVitals.js","index.js"],"names":["AllPets","props","useState","pets","setPets","useEffect","axios","get","then","res","data","catch","err","console","log","style","display","justifyContent","to","textDecoration","onClick","event","preventDefault","sorted","sort","a","b","type","localeCompare","sortArray","className","map","pet","name","_id","NewPet","setName","setType","description","setDescription","skill_1","setSkill_1","skill_2","setSkill_2","skill_3","setSkill_3","errors","setErrors","onSubmit","newPet","post","navigate","response","handleNewPetSubmit","outline","padding","message","onChange","target","value","Pet","setPet","id","delete","paddingLeft","marginTop","listStyleType","EditPet","editedPet","put","handleEditPetSubmit","App","path","from","noThrow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4aadbfc8.chunk.js","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\n\nimport { Link } from \"@reach/router\";\nimport axios from \"axios\";\n\nconst AllPets = (props) => {\n\n    const [pets, setPets] = useState([]);\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:8000/api/pets\")\n            .then((res) => {\n                setPets(res.data);\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    const sortArray = (event) => {\n        event.preventDefault();\n\n        const sorted = [...pets].sort((a, b) => a.type.localeCompare(b.type));\n        console.log(\"these pets are sorted: \", sorted);\n        setPets(sorted);\n    }\n\n\n    return (\n        <div>\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                <h1>Pet Shelter</h1>\n                <Link to={`/pets/new`}><span style={{textDecoration: \"underline\"}}>add a pet to the shelter</span></Link>\n            </div>\n            <h3>These pets are looking for a good home</h3>\n            <button onClick={(event) => {\n                sortArray(event)\n            }}>Sort pets by type</button>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {pets.map((pet) => {\n                        return (\n                            <tr key={pet._id}>\n                                <td>{pet.name}</td>\n                                <td>{pet.type}</td>\n                                <td>\n                                    <Link to={`/pets/${pet._id}`}>details</Link>\n                                    |\n                                    <Link to={`/pets/${pet._id}/edit`}>edit</Link>\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n\n    )\n\n}\n\nexport default AllPets;","import React, { useState } from \"react\";\n\nimport { navigate, Link } from \"@reach/router\";\nimport axios from \"axios\";\n\nconst NewPet = (props) => {\n\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill_1, setSkill_1] = useState(\"\");\n    const [skill_2, setSkill_2] = useState(\"\");\n    const [skill_3, setSkill_3] = useState(\"\");\n    const [errors, setErrors] = useState(null);\n\n\n    const handleNewPetSubmit = (event) => {\n        event.preventDefault();\n\n        const newPet = {\n            name,\n            type,\n            description,\n            skill_1,\n            skill_2,\n            skill_3\n        };\n\n        axios\n            .post(\"http://localhost:8000/api/pets\", newPet)\n            .then((res) => {\n                console.log(\"new pet response\", res);\n                navigate(\"/pets\")\n            })\n            .catch((err) => {\n                setErrors(err.response?.data?.errors)\n                console.log(err.response)\n            })\n    }\n\n\n    return (\n        <div>\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                <h1>Pet Shelter</h1>\n                <Link to=\"/pets\"><span style={{textDecoration: \"underline\"}}>back to home</span></Link>\n            </div>\n            <h3>Know a pet needing a home?</h3>\n            <form onSubmit={(event) => {\n                handleNewPetSubmit(event)\n            }}\n            style={{outline: \"solid black 1px\", padding:\"10px\"}}\n            >\n                <div>\n                    <label>Pet Name: </label>\n                    {errors?.name && (\n                        <span className=\"text-danger\"> - {errors?.name?.message}</span>\n                    )}\n                    <input onChange={(event) => {\n                        setName(event.target.value);\n                    }}\n                    type=\"text\"\n                    />\n                </div>\n                <div>\n                    <label>Pet Type: </label>\n                    {errors?.type && (\n                        <span className=\"text-danger\"> - {errors?.type?.message}</span>\n                    )}\n                    <input onChange={(event) => {\n                        setType(event.target.value);\n                    }}\n                    type=\"text\"\n                    />\n                </div>\n                <div>\n                    <label>Pet Description: </label>\n                    {errors?.description && (\n                        <span className=\"text-danger\"> - {errors?.description?.message}</span>\n                    )}\n                    <input onChange={(event) => {\n                        setDescription(event.target.value);\n                    }}\n                    type=\"text\"\n                    />\n                </div>\n\n                <h5>Skills optional:</h5>\n                <div>\n                    <label>Skill 1: </label>\n                    <input onChange={(event) => {\n                        setSkill_1(event.target.value)\n                    }}\n                    type=\"text\"\n                    />\n                </div>\n                <div>\n                    <label>Skill 2: </label>\n                    <input onChange={(event) => {\n                        setSkill_2(event.target.value)\n                    }}\n                    type=\"text\"\n                    />\n                </div>\n                <div>\n                    <label>Skill 3: </label>\n                    <input onChange={(event) => {\n                        setSkill_3(event.target.value)\n                    }}\n                    type=\"text\"\n                    />\n                </div>\n                <button className=\"btn btn-sm btn-outline-primary\">Add Pet</button>\n            </form>\n\n        </div>\n    )\n\n}\n\nexport default NewPet;","import React, { useEffect, useState } from \"react\";\n\nimport axios from \"axios\";\nimport { navigate, Link } from \"@reach/router\";\n\n\nconst Pet = (props) => {\n\n    const [pet, setPet] = useState(null);\n\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:8000/api/pets/\" + props.id)\n            .then((res) => {\n                setPet(res.data);\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n    }, [props.id])\n\n    const handleDelete = () => {\n        axios\n            .delete(\"http://localhost:8000/api/pets/\" + pet._id)\n            .then((res) => {\n                navigate(\"/pets\");\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n\n\n    if(pet === null) {\n        return \"Loading...\";\n    }\n\n    return (\n        <div>\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                <h1>Pet Shelter</h1>\n                <Link to=\"/pets\"><span style={{textDecoration: \"underline\"}}>back to home</span></Link>\n            </div>\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                <h3>Details about: {pet.name}</h3>\n                <button onClick={(event) => {\n                    handleDelete();\n                }}\n                className=\"btn btn-sm btn-outline-danger\"\n                >Adopt {pet.name}</button>\n            </div>\n            <div style={{outline: \"solid black 1px\", paddingLeft: \"10px\", marginTop: \"10px\"}}>\n                <p>Pet type: {pet.type}</p>\n                <p>Description: {pet.description}</p>\n                <div style={{display: \"flex\"}}>\n                    <p>Skills: </p>\n                    <ul>\n                        <li style={{listStyleType: \"none\"}}>{pet.skill_1}</li>\n                        <li style={{listStyleType: \"none\"}}>{pet.skill_2}</li>\n                        <li style={{listStyleType: \"none\"}}>{pet.skill_3}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default Pet;","\nimport React, { useEffect, useState } from \"react\";\n\nimport { navigate, Link } from \"@reach/router\";\nimport axios from \"axios\";\nimport Pet from \"./Pet\";\n\n\nconst EditPet = (props) => {\n\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill_1, setSkill_1] = useState(\"\");\n    const [skill_2, setSkill_2] = useState(\"\");\n    const [skill_3, setSkill_3] = useState(\"\");\n    const [errors, setErrors] = useState(null);\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:8000/api/pets/\" + props.id)\n            .then((res) => {\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkill_1(res.data.skill_1);\n                setSkill_2(res.data.skill_2);\n                setSkill_3(res.data.skill_3);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, [props.id])\n\n    const handleEditPetSubmit = (event) => {\n        event.preventDefault();\n\n        const editedPet = {\n            name,\n            type,\n            description,\n            skill_1,\n            skill_2,\n            skill_3\n        }\n\n        axios\n            .put(\"http://localhost:8000/api/pets/\" + props.id,\n            editedPet)\n            .then((res) => {\n                console.log(\"edit pet response: \", res);\n                navigate(`/pets/${props.id}`);\n            })\n            .catch((err) => {\n                setErrors(err.response?.data?.errors);\n            });\n    };\n\n\n    return (\n        <div>\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                <h1>Pet Shelter</h1>\n                <Link to=\"/pets\"><span style={{textDecoration: \"underline\"}}>back to home</span></Link>\n            </div>\n            <h3>Edit {name}</h3>\n            <form onSubmit={(event) => {\n                handleEditPetSubmit(event)\n            }}\n            style={{outline: \"solid black 1px\", padding:\"10px\"}}\n            >\n                <div>\n                    <label>Pet Name: </label>\n                    {errors?.name && (\n                        <span className=\"text-danger\"> - {errors?.name?.message}</span>\n                    )}\n                    <input onChange={(event) => {\n                        setName(event.target.value);\n                    }}\n                    type=\"text\"\n                    value={name}\n                    />\n                </div>\n                <div>\n                    <label>Pet Type: </label>\n                    {errors?.type && (\n                        <span className=\"text-danger\"> - {errors?.type?.message}</span>\n                    )}\n                    <input onChange={(event) => {\n                        setType(event.target.value);\n                    }}\n                    type=\"text\"\n                    value={type}\n                    />\n                </div>\n                <div>\n                    <label>Pet Description: </label>\n                    {errors?.description && (\n                        <span className=\"text-danger\"> - {errors?.description?.message}</span>\n                    )}\n                    <input onChange={(event) => {\n                        setDescription(event.target.value);\n                    }}\n                    type=\"text\"\n                    value={description}\n                    />\n                </div>\n\n                <h5>Skills optional:</h5>\n                <div>\n                    <label>Skill 1: </label>\n                    <input onChange={(event) => {\n                        setSkill_1(event.target.value)\n                    }}\n                    type=\"text\"\n                    value={skill_1}\n                    />\n                </div>\n                <div>\n                    <label>Skill 2: </label>\n                    <input onChange={(event) => {\n                        setSkill_2(event.target.value)\n                    }}\n                    type=\"text\"\n                    value={skill_2}\n                    />\n                </div>\n                <div>\n                    <label>Skill 3: </label>\n                    <input onChange={(event) => {\n                        setSkill_3(event.target.value)\n                    }}\n                    type=\"text\"\n                    value={skill_3}\n                    />\n                </div>\n                <button className=\"btn btn-sm btn-outline-primary\">Edit Pet</button>\n            </form>\n        </div>\n    )\n}\n\nexport default EditPet;","import './App.css';\nimport { Link, Redirect, Router } from \"@reach/router\";\nimport AllPets from './views/AllPets';\nimport NewPet from './views/NewPet';\nimport Pet from './views/Pet';\nimport EditPet from './views/EditPet';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <EditPet path=\"/pets/:id/edit\"/>\n        <Pet path=\"/pets/:id\"/>\n        <AllPets path=\"/pets\"/>\n        <NewPet path=\"/pets/new\"/>\n        <Redirect from=\"/\" to=\"/pets\" noThrow=\"true\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}